##########################################################################
#                                                                        #
# Copyright (C) 2021 by Tidop Research Group                             #
# Copyright (C) 2021 by Esteban Ruiz de Oña Crespo                       #
#                                                                        #
# This file is part of TidopLib                                          #
#                                                                        #
# TidopLib is free software: you can redistribute it and/or modify       #
# it under the terms of the GNU Lesser General Public License as         #
# published by the Free Software Foundation, either version 3 of the     #
# License, or (at your option) any later version.                        #
#                                                                        #
# TidopLib is distributed in the hope that it will be useful,            #
# but WITHOUT ANY WARRANTY; without even the implied warranty of         #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          #
# GNU Lesser General Public License for more details.                    #
#                                                                        #
# You should have received a copy of the GNU Lesser General Public       #
# License along with Foobar. If not, see <http://www.gnu.org/licenses/>. #
#                                                                        #
# @license LGPL-3.0 <https://www.gnu.org/licenses/lgpl-3.0.html>         #
#                                                                        #
##########################################################################

@PACKAGE_INIT@

include(CMakeFindDependencyMacro)

set(TidopLib_INCLUDE_DIRS "@INCLUDE_DIRS_TIDOP@")


include (CMakeFindDependencyMacro)

## TODO: COMPONENTS no esta soportado hasta la versión 3.8 de CMAKE

set(Boost_USE_STATIC_LIBS        ON) # only find static libs
set(Boost_USE_MULTITHREADED      ON)
set(Boost_USE_STATIC_RUNTIME     OFF)

find_dependency(Boost REQUIRED)
#find_package(Boost COMPONENTS filesystem system REQUIRED)
include_directories(${Boost_INCLUDE_DIRS})


if(@TL_HAVE_GDAL@)
  find_dependency(GDAL QUIET)

  #if(NOT GDAL_FOUND)
  #  set(TL_HAVE_GDAL NO)
  #else()
  #  set(TL_HAVE_GDAL YES)
    include_directories(${GDAL_INCLUDE_DIR})
  #endif()
endif()

if(@TL_HAVE_PROJ4@)
  find_dependency(PROJ4 QUIET)
  
  #if(NOT PROJ4_FOUND)
  #  set(TL_HAVE_PROJ4 NO)
  #else()
  #  set(TL_HAVE_PROJ4 YES)
    include_directories(${PROJ4_INCLUDE})
	#message(STATUS "  Include : ${PROJ4_INCLUDE_DIRS}")
  #  message(STATUS "  Library : ${PROJ4_LIBRARIES}")
  #endif()
endif()

if(@TL_HAVE_OPENCV@)
  find_dependency(OpenCV QUIET)
  
  #if(NOT OPENCV_FOUND)
  #  set(TL_HAVE_OPENCV NO)
  #else()
  #  set(TL_HAVE_OPENCV YES)
	#message(STATUS "  OpenCV version: ${OpenCV_VERSION}")
  #endif()
endif()
	
if(@TL_HAVE_OPENBLAS@)
  find_dependency(OpenBLAS QUIET)
  
  #if(NOT OpenBLAS_FOUND)
  #  set(TL_HAVE_OPENBLAS NO)
  #else()
  #  set(TL_HAVE_OPENBLAS YES)
    include_directories(${OpenBLAS_INCLUDE_DIRS})
  #endif()
endif()

if(@TL_HAVE_OPENMP@)

  find_dependency(OpenMP QUIET)
  
  #if(OpenMP_FOUND)
  #  set(TL_HAVE_OPENMP YES)
  #  message(STATUS "  OpenMP enable")
  #else()
  #  set(TL_HAVE_OPENMP NO)
  #endif()
  
endif()

include("${CMAKE_CURRENT_LIST_DIR}/@TARGETS_EXPORT_NAME@.cmake")
check_required_components("@PROJECT_NAME@")

#set(_supported_components Core Math)
#
#foreach(comp ${TidopLib_FIND_COMPONENTS})
#  if (NOT ";${_supported_components};" MATCHES comp)
#    set(TidopLib_FOUND False)
#    set(TidopLib_NOT_FOUND_MESSAGE "Unsupported component: ${comp}")
#  endif()
#  #include("${CMAKE_CURRENT_LIST_DIR}/ClimbingStats${_comp}Targets.cmake")
#endforeach()