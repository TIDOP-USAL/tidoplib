##########################################################################
#                                                                        #
# Copyright (C) 2021 by Tidop Research Group                             #
# Copyright (C) 2021 by Esteban Ruiz de OÃ±a Crespo                       #
#                                                                        #
# This file is part of TidopLib                                          #
#                                                                        #
# TidopLib is free software: you can redistribute it and/or modify       #
# it under the terms of the GNU Lesser General Public License as         #
# published by the Free Software Foundation, either version 3 of the     #
# License, or (at your option) any later version.                        #
#                                                                        #
# TidopLib is distributed in the hope that it will be useful,            #
# but WITHOUT ANY WARRANTY; without even the implied warranty of         #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          #
# GNU Lesser General Public License for more details.                    #
#                                                                        #
# You should have received a copy of the GNU Lesser General Public       #
# License along with Foobar. If not, see <http://www.gnu.org/licenses/>. #
#                                                                        #
# @license LGPL-3.0 <https://www.gnu.org/licenses/lgpl-3.0.html>         #
#                                                                        #
##########################################################################

@PACKAGE_INIT@

include(CMakeFindDependencyMacro)

set(TidopLib_INCLUDE_DIRS "@INCLUDE_DIRS_TIDOP@")

message(STATUS "Find TidopLib dependencies")


if(@TL_HAVE_BOOST@)
set(Boost_USE_STATIC_LIBS        ON) # only find static libs
set(Boost_USE_MULTITHREADED      ON)
set(Boost_USE_STATIC_RUNTIME     OFF)
set(Boost_DIR "@Boost_DIR@" CACHE PATH "The directory containing BoostConfig.cmake")

find_dependency(Boost QUIET REQUIRED filesystem system)
endif()

if(@TL_HAVE_GDAL@)
    set(GDAL_DIR "@GDAL_DIR@" CACHE PATH "The directory containing GDALConfig.cmake")
    find_dependency(GDAL QUIET)
    if(NOT GDAL_FOUND)
        set(TL_HAVE_GDAL NO)
        message(STATUS "  GDAL not found")
    else()
        message(STATUS "  GDAL version: ${GDAL_VERSION}")
        set(TL_HAVE_GDAL YES)
    endif()		
endif()

if(@TL_HAVE_PROJ@)
    set(PROJ_DIR "@PROJ_DIR@" CACHE PATH "The directory containing PROJConfig.cmake")
    find_dependency(PROJ QUIET)
endif()

if(@TL_HAVE_PROJ4@)
    set(PROJ4_DIR "@PROJ4_DIR@" CACHE PATH "The directory containing PROJ4Config.cmake")
    find_dependency(PROJ4 QUIET)
endif()

if(@TL_HAVE_OPENCV@)
    set(OpenCV_DIR "@OpenCV_DIR@" CACHE PATH "The directory containing OpenCVConfig.cmake")
    find_dependency(OpenCV QUIET)
endif()
	
if(@TL_HAVE_OPENBLAS@)
    set(OpenBLAS_DIR "@OpenBLAS_DIR@" CACHE PATH "The directory containing OpenBLASConfig.cmake")
    find_dependency(OpenBLAS QUIET)
endif()

if(@TL_HAVE_OPENMP@)
    find_dependency(OpenMP QUIET)
endif()

if(@TL_HAVE_FMT@)
    set(fmt_DIR "@fmt_DIR@" CACHE PATH "The directory containing fmt-config.cmake")
    find_dependency(fmt QUIET)
    add_compile_definitions(TL_HAVE_FMT)
    add_compile_definitions("FORMAT_NAMESPACE=fmt::")
else()
    add_compile_definitions("FORMAT_NAMESPACE=std::")
endif()

include("${CMAKE_CURRENT_LIST_DIR}/@TARGETS_EXPORT_NAME@.cmake")
check_required_components("@PROJECT_NAME@")

#set(_supported_components Core Math)
#
#foreach(comp ${TidopLib_FIND_COMPONENTS})
#  if (NOT ";${_supported_components};" MATCHES comp)
#    set(TidopLib_FOUND False)
#    set(TidopLib_NOT_FOUND_MESSAGE "Unsupported component: ${comp}")
#  endif()
#  #include("${CMAKE_CURRENT_LIST_DIR}/ClimbingStats${_comp}Targets.cmake")
#endforeach()
